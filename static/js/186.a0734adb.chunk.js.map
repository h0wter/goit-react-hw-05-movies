{"version":3,"file":"static/js/186.a0734adb.chunk.js","mappings":"4LAGaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CAAcC,EAAAA,GAAQC,EAAAA,GAAOC,EAAAA,K,gHCkChD,UAhCgB,WACd,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GASR,IAPAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACOC,EAAAA,EAAAA,IAAgBJ,GADvB,OACVK,EADU,OAEhBN,EAAUM,EAASC,MAFH,2CAAH,qDAIfH,MACC,CAACH,IACe,OAAfF,EACJ,OAAkC,IAA9BA,EAAWS,QAAQC,QACd,sEAIP,0BACE,wBACGV,EAAWS,QAAQE,KAAI,YAA8B,IAA3BT,EAA0B,EAA1BA,GAAIU,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACrC,OACE,2BACE,UAAC,IAAD,CAAKC,WAAW,OAAhB,qBAAgCF,MAChC,uBAAIC,MAFGX,Y,4LCxBfa,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAS,mCAAG,6GAEED,EAAAA,GAAAA,IAAA,sCAAyCD,IAF3C,cAEfR,EAFe,yBAGdA,GAHc,gCAKrBW,QAAQC,IAAI,KAAMC,SALG,yDAAH,qDASTC,EAAe,mCAAG,WAAMC,GAAN,gGAEJN,EAAAA,GAAAA,IAAA,gCACID,EADJ,kBACqBO,EADrB,YAFI,cAErBf,EAFqB,yBAKpBA,GALoB,gCAO3BW,QAAQC,IAAI,KAAMC,SAPS,yDAAH,sDAWfG,EAAe,mCAAG,WAAMrB,GAAN,gGAEJc,EAAAA,GAAAA,IAAA,iBAAoBd,EAApB,oBAAkCa,IAF9B,cAErBR,EAFqB,yBAGpBA,GAHoB,gCAK3BW,QAAQC,IAAI,KAAMC,SALS,yDAAH,sDASfI,EAAY,mCAAG,WAAMtB,GAAN,gGAEDc,EAAAA,GAAAA,IAAA,iBAAoBd,EAApB,4BAA0Ca,IAFzC,cAElBR,EAFkB,yBAGjBA,GAHiB,gCAKxBW,QAAQC,IAAI,KAAMC,SALM,yDAAH,sDASZd,EAAe,mCAAG,WAAMJ,GAAN,gGAEJc,EAAAA,GAAAA,IAAA,iBAAoBd,EAApB,4BAA0Ca,IAFtC,cAErBR,EAFqB,yBAGpBA,GAHoB,gCAK3BW,QAAQC,IAAI,KAAMC,SALS,yDAAH","sources":["components/Box.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { layout, space, typography } from 'styled-system';\n\nexport const Box = styled('div')(layout, space, typography);\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport { Box } from 'components/Box';\n\nconst Reviews = () => {\n  const [reviewData, setReview] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await getMovieReviews(id);\n      setReview(response.data);\n    };\n    fetchData();\n  }, [id]);\n  if (reviewData === null) return;\n  if (reviewData.results.length === 0) {\n    return <p>We don't have any reviews for this movie.</p>;\n  }\n\n  return (\n    <div>\n      <ul>\n        {reviewData.results.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <Box fontWeight=\"bold\">Author: {author}</Box>\n              <p>{content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'e900ddd99edc3affd146f1905e638fd1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMoviesByName = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}&page=1`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["Box","styled","layout","space","typography","useState","reviewData","setReview","id","useParams","useEffect","fetchData","getMovieReviews","response","data","results","length","map","author","content","fontWeight","API_KEY","axios","getMovies","console","log","message","getMoviesByName","query","getMovieDetails","getMovieCast"],"sourceRoot":""}