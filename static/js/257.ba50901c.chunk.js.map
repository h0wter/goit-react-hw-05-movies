{"version":3,"file":"static/js/257.ba50901c.chunk.js","mappings":"4LAGaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CAAcC,EAAAA,GAAQC,EAAAA,GAAOC,EAAAA,K,iKCAnCC,GAAWJ,E,OAAAA,IAAOK,EAAAA,GAAPL,CAAH,oS,SC+DrB,EA1DqB,WAAO,IAAD,IACzB,GAA0BM,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,EAAW,qBADAC,EAAAA,EAAAA,MACYC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAU5C,IARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACIC,EAAAA,EAAAA,IAAgBR,GADpB,OACVF,EADU,OAEhBC,EAASD,EAAMW,MAFC,2CAAH,qDAIfF,MACC,CAACP,IAEU,OAAVF,EAAJ,CAEA,IAAQY,EAAuDZ,EAAvDY,MAAOC,EAAgDb,EAAhDa,YAAaC,EAAmCd,EAAnCc,aAAcC,EAAqBf,EAArBe,SACpCC,EADyDhB,EAAXiB,OACxBC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,KAC1D,OACE,6BACE,SAACxB,EAAD,CAAUyB,GAAIlB,EAAd,sBACA,UAACZ,EAAA,EAAD,CAAK+B,QAAQ,OAAb,WACE,gBAAKC,IAAG,UAxBA,kCAwBeX,GAAeY,IAAKzB,EAAMY,MAAOc,MAAM,WAC9D,UAAClC,EAAA,EAAD,CAAKmC,GAAI,EAAT,WACE,wBAAKf,KACL,wCAAgBE,MAChB,SAACtB,EAAA,EAAD,CAAKoC,GAAG,IAAIC,WAAW,OAAvB,uBAGA,uBAAId,KACJ,SAACvB,EAAA,EAAD,CAAKoC,GAAG,IAAIC,WAAW,OAAvB,qBAGA,uBAAIb,WAGR,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAASM,GAAG,OAAOhB,MAAO,CAAEC,KAAMH,GAAlC,qBAIF,yBACE,SAAC,KAAD,CAASkB,GAAG,UAAUhB,MAAO,CAAEC,KAAMH,GAArC,8BAMN,SAAC,EAAA0B,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,Y,4LC1DFC,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAS,mCAAG,6GAEED,EAAAA,GAAAA,IAAA,sCAAyCD,IAF3C,cAEfG,EAFe,yBAGdA,GAHc,gCAKrBC,QAAQC,IAAI,KAAMC,SALG,yDAAH,qDASTC,EAAe,mCAAG,WAAMC,GAAN,gGAEJP,EAAAA,GAAAA,IAAA,gCACID,EADJ,kBACqBQ,EADrB,YAFI,cAErBL,EAFqB,yBAKpBA,GALoB,gCAO3BC,QAAQC,IAAI,KAAMC,SAPS,yDAAH,sDAWf5B,EAAe,mCAAG,WAAMR,GAAN,gGAEJ+B,EAAAA,GAAAA,IAAA,iBAAoB/B,EAApB,oBAAkC8B,IAF9B,cAErBG,EAFqB,yBAGpBA,GAHoB,gCAK3BC,QAAQC,IAAI,KAAMC,SALS,yDAAH,sDASfG,EAAY,mCAAG,WAAMvC,GAAN,gGAED+B,EAAAA,GAAAA,IAAA,iBAAoB/B,EAApB,4BAA0C8B,IAFzC,cAElBG,EAFkB,yBAGjBA,GAHiB,gCAKxBC,QAAQC,IAAI,KAAMC,SALM,yDAAH,sDASZI,EAAe,mCAAG,WAAMxC,GAAN,gGAEJ+B,EAAAA,GAAAA,IAAA,iBAAoB/B,EAApB,4BAA0C8B,IAFtC,cAErBG,EAFqB,yBAGpBA,GAHoB,gCAK3BC,QAAQC,IAAI,KAAMC,SALS,yDAAH","sources":["components/Box.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { layout, space, typography } from 'styled-system';\n\nexport const Box = styled('div')(layout, space, typography);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  padding: 2px 5px;\n  margin-bottom: 2px;\n  background-color: #fff;\n  border: 1px solid #d5d9d9;\n  border-radius: 5px;\n  box-shadow: rgba(213, 217, 217, 0.5) 0 2px 5px 0;\n  color: #0f1111;\n  cursor: pointer;\n  display: inline-block;\n  text-decoration: none;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { Box } from 'components/Box';\nimport { BackLink } from './MovieDetails.styled';\n\nconst baseURL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkRef = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const movie = await getMovieDetails(id);\n      setMovie(movie.data);\n    };\n    fetchData();\n  }, [id]);\n\n  if (movie === null) return;\n\n  const { title, poster_path, vote_average, overview, genres } = movie;\n  const genresString = genres.map(genre => genre.name).join(' ');\n  return (\n    <main>\n      <BackLink to={backLinkRef}>Go back</BackLink>\n      <Box display=\"flex\">\n        <img src={`${baseURL + poster_path}`} alt={movie.title} width=\"200px\" />\n        <Box ml={3}>\n          <h2>{title}</h2>\n          <p>User score: {vote_average}</p>\n          <Box as=\"p\" fontWeight=\"bold\">\n            Overview\n          </Box>\n          <p>{overview}</p>\n          <Box as=\"p\" fontWeight=\"bold\">\n            Genres\n          </Box>\n          <p>{genresString}</p>\n        </Box>\n      </Box>\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <NavLink to=\"cast\" state={{ from: backLinkRef }}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" state={{ from: backLinkRef }}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'e900ddd99edc3affd146f1905e638fd1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMoviesByName = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}&page=1`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["Box","styled","layout","space","typography","BackLink","Link","useState","movie","setMovie","id","useParams","backLinkRef","useLocation","state","from","useEffect","fetchData","getMovieDetails","data","title","poster_path","vote_average","overview","genresString","genres","map","genre","name","join","to","display","src","alt","width","ml","as","fontWeight","Suspense","fallback","API_KEY","axios","getMovies","response","console","log","message","getMoviesByName","query","getMovieCast","getMovieReviews"],"sourceRoot":""}